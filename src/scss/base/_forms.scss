//------------------------------------------------------------------------------
// #base: Forms
//------------------------------------------------------------------------------
// #description:
//
//------------------------------------------------------------------------------

//
// #settings

// Layout Variables
$input-padding: 8px;
$input-height: $default-height;
$input-border-width: 2px;
$input-border-radius: $default-border-radius;

// Theme Variables
$input-color: $default-action-icon-color;
$input-background-color: $default-action-bg;
$input-border-color: $default-action-bg;
$input-border-hover-color: darken($input-border-color, 10%);
$input-background-focus-color: $input-background-color;
$input-border-focus-color: $default-action-bg-hover;
$input-hover-color: $default-action-color-hover;
$input-placeholder-color: $default-action-icon-color;
$input-disabled-color: $default-gray-dark;
$input-invalid-border-color: $default-important-color;
$input-invalid-color: $default-important-light-color;


//
// #scss

//
// General Form element styling
//------------------------------------------------------------------------------
//
// 1. Make inputs at least the height of their button counterpart
//    (base line-height + padding + border)
// 3. This has no effect on <select>s in some browsers, due to the limited
//    stylability of `<select>`s in CSS.
// 4. Override Firefox"s unusual default opacity; see
//    https://github.com/twbs/bootstrap/pull/11526.
// 5. iOS fix for unreadable disabled content;
//    see https://github.com/twbs/bootstrap/issues/11655.
// 6. HTML5 says that controls under a fieldset > legend:first-child won"t be
//    disabled if the fieldset is disabled. Due to implementation difficulty, we
//    don"t honor that edge case; we style them as disabled anyway.
//
[type="date"],
[type="datetime"],
[type="datetime-local"],
[type="email"],
[type="month"],
[type="number"],
[type="password"],
[type="search"],
[type="tel"],
[type="text"],
[type="time"],
[type="url"],
[type="week"],
[type="color"],
select,
textarea {
	background-color: $input-background-color;
	background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0) 97%, $input-hover-color 3%);
	background-repeat: no-repeat;
	background-size: 0 100%;
	border: none;
	border-bottom: solid ($input-border-width / 2) $input-border-color;
	border-radius: $input-border-radius;
	color: $input-color;
	display: inline-block;
	width: 100%;
	height: $input-height;
	padding: ($input-padding * 2.5) ($input-padding * 2) 0;
	transition: all 0.3s cubic-bezier(0.64, 0.09, 0.08, 1);

	&::placeholder {
		transform: translateY(-8px);
	}

	&:hover {
		border-bottom-color: $input-border-hover-color;
	}

	&:focus {
		background-size: 100% 100%;
		border-color: $input-hover-color;
		outline: none;
		box-shadow: none;

		&::placeholder {
			font-size: 11px;
			color: $input-hover-color;
			transform: translateY(-20px);
		}
	}

	// [6]
	&:disabled,
	&[readonly] {
		background-color: $input-disabled-color;
		color: $white;
		opacity: 1; // [5]

		&::placeholder {
			color: $white;
		}

	}

	&:disabled {
		cursor: not-allowed;
	}

	&:focus:invalid,
	&:focus:invalid,
	&:focus:invalid {
		border-color: $input-invalid-border-color;
		color: $input-invalid-color;
	}
}

textarea {
	background-image: linear-gradient(to bottom, rgba(255, 255, 255, 0) 99%, $input-hover-color 1%);
	height: auto;
	padding-top: 24px;

	&::placeholder {
		transform: translateY(0);
	}

	&:focus {
		&::placeholder {
			transform: translateY(-16px);
		}
	}
}

//
// Select elements
//------------------------------------------------------------------------------
//
// 1. Suppress the nested default white text on blue background highlight given
//    to the selected option text when the (still closed) <select> receives
//    focusin IE and (under certain conditions) Edge, as it looks bad and cannot
//    be made to match the appearance of the native widget.
//    See https://github.com/twbs/bootstrap/issues/19398.
//
select {
	background-color: $input-background-color;
	display: inline-block;
	min-width: ($input-padding * 10);
	max-width: 100%;
	padding: $input-padding;
	cursor: pointer;

	&:focus::-ms-value {
		background-color: $input-background-color; // [1]
		color: $input-hover-color; // [1]
	}

	&:focus:-moz-focusring {
		text-shadow: 0 0 0 $black;
		color: transparent;
	}

	&[multiple="multiple"] {
		background-image: none;
	}
}

input[type="color"] {
	width: $input-height;
	height: $input-height;
}

//
// File & Range elements
//------------------------------------------------------------------------------
//
// Make file inputs better match text inputs by forcing them to new lines.
//
input[type="file"],
input[type="range"] {
	display: inline-block;
}

input[type="file"],
input[type="radio"],
input[type="checkbox"] {
	&:focus:invalid:focus {
		outline-color: $input-invalid-border-color;
	}
}

//
// Radio & Checkbox elements
//------------------------------------------------------------------------------

// Remove default checkbox
//
[type="checkbox"]:not(:checked),
[type="checkbox"]:checked,
[type="radio"]:not(:checked),
[type="radio"]:checked {
	opacity: 0;
	position: absolute;
}

// Default Styles
[type="checkbox"] + label,
[type="radio"] + label {
	position: relative;
	display: inline-block;
	margin: 0 $input-padding;
	padding-left: ($input-padding * 4);
	cursor: pointer;
	user-select: none;
	transition: 0.28s ease;
}

[type="checkbox"] + label:before {
	border: $input-border-width solid $input-border-hover-color;
	border-radius: $input-border-radius;
	position: absolute;
	z-index: 0;
	top: 0;
	left: 0;
	width: ($input-padding * 2.5);
	height: ($input-padding * 2.5);
	margin-top: ($input-padding * 0.25);
	content: "";
	transition: 0.2s;
}

[type="radio"] + label:before,
[type="radio"] + label:after {
	border-radius: 50%;
	position: absolute;
	z-index: 0;
	top: 0;
	left: 0;
	width: ($input-padding * 2);
	height: ($input-padding * 2);
	margin: ($input-padding * 0.5) ($input-padding *0.5) ($input-padding * 0.5) 0;
	content: "";
	transition: 0.28s ease;
}

// Indeterminate checkbox
[type="checkbox"]:indeterminate + label:before {
	border-top: none;
	border-right: $input-border-width solid $input-invalid-border-color;
	border-bottom: none;
	border-left: none;
	top: -11px;
	left: ($input-padding * -1.5);
	height: ($input-padding * 2.25);
	transform: rotate(90deg);
	transform-origin: 100% 100%;
	backface-visibility: hidden;

	// Disabled indeterminate
	&:disabled {
		background-color: transparent;
		border-right: $input-border-width solid $input-disabled-color;
	}
}

// Not Checked
[type="radio"]:not(:checked) + label {
	&:before,
	&:after {
		border: $input-border-width solid $input-border-hover-color;
	}

	&:after {
		opacity: 0;
		z-index: -1;
		transform: scale(2);
	}
}

// Checked
[type="checkbox"]:checked + label:before {
	border-top: $input-border-width solid transparent;
	border-right: $input-border-width solid $input-hover-color;
	border-bottom: $input-border-width solid $input-hover-color;
	border-left: $input-border-width solid transparent;
	top: ($input-padding * -0.5);
	left: -5px;
	width: ($input-padding * 1.5);
	height: ($input-padding * 2.75);
	transform: rotate(40deg);
	transform-origin: 100% 100%;
	backface-visibility: hidden;
}

[type="radio"]:checked + label {
	&:before {
		border: $input-border-width solid $input-hover-color;
	}

	&:after {
		background-color: $input-hover-color;
		z-index: 0;
		transform: scale(0.5) opacity(1);
	}
}

// Disabled style
[type="checkbox"]:disabled {
	&:checked + label:before {
		border-right: $input-border-width solid $input-disabled-color;
		border-bottom: $input-border-width solid $input-disabled-color;
	}

	&:not(:checked) + label:before {
		background-color: $input-disabled-color;
		border: none;
	}
}

[type="radio"]:disabled {
	+ label {
		color: $input-disabled-color;
	}

	&:checked + label:before,
	&:not(:checked) + label:before {
		border: $input-border-width solid $input-disabled-color;
	}

	:checked + label:after {
		background-color: $input-disabled-color;
		border: none;
	}
}

// Hover
[type="checkbox"]:hover:not(:checked) + label:before,
[type="radio"]:hover + label:before {
	border-color: darken($input-border-hover-color, 10%);
}

//
// Placeholder Colour
//------------------------------------------------------------------------------
//
::-webkit-input-placeholder {
	color: $input-placeholder-color;
}

:-moz-placeholder {
	color: $input-placeholder-color;
}

::-moz-placeholder {
	color: $input-placeholder-color;
}

:-ms-input-placeholder {
	color: $input-placeholder-color;
}
